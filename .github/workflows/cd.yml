name: LIGAMX Stats CD

on:
  workflow_run:
    workflows: ["LIGAMX Stats CI"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install python-dotenv flask requests
        
    - name: Create .env file
      env:
        LIVESCORE_API_KEY: ${{ secrets.LIVESCORE_API_KEY }}
        LIVESCORE_API_SECRET: ${{ secrets.LIVESCORE_API_SECRET }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        SMTP_TO: ${{ secrets.SMTP_TO }}
      run: |
        echo "LIVESCORE_API_KEY=$LIVESCORE_API_KEY" > .env
        echo "LIVESCORE_API_SECRET=$LIVESCORE_API_SECRET" >> .env
        echo "FLASK_ENV=production" >> .env
        echo "FLASK_DEBUG=False" >> .env
        echo "SMTP_SERVER=$SMTP_SERVER" >> .env
        echo "SMTP_PORT=$SMTP_PORT" >> .env
        echo "SMTP_USERNAME=$SMTP_USERNAME" >> .env
        echo "SMTP_PASSWORD=$SMTP_PASSWORD" >> .env
        echo "SMTP_FROM=$SMTP_FROM" >> .env
        echo "SMTP_TO=$SMTP_TO" >> .env
    
    - name: Deploy to production
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
        
        # Deploy application
        rsync -avz --exclude '.git' --exclude '.github' --exclude '__pycache__' --exclude 'venv' --exclude '.env' . "$SSH_USERNAME@$SSH_HOST:/var/www/ligamxweb"
        
        # Restart service
        ssh "$SSH_USERNAME@$SSH_HOST" 'sudo systemctl restart ligamxweb.service'
        
    - name: Send notification
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        SMTP_TO: ${{ secrets.SMTP_TO }}
      run: |
        python -c "import smtplib; from email.mime.text import MIMEText; s = smtplib.SMTP('$SMTP_SERVER', $SMTP_PORT); s.starttls(); s.login('$SMTP_USERNAME', '$SMTP_PASSWORD'); msg = MIMEText('LIGAMX Stats application has been deployed successfully.'); msg['Subject'] = 'Deployment Notification'; msg['From'] = '$SMTP_FROM'; msg['To'] = '$SMTP_TO'; s.send_message(msg); s.quit()"
