name: LIGAMX Stats CD

on:
  workflow_run:
    workflows: ["LIGAMX Stats CI"]
    types:
      - completed
    branches:
      - main

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-dotenv flask requests
        
    - name: Create .env file
      env:
        LIVESCORE_API_KEY: ${{ secrets.LIVESCORE_API_KEY }}
        LIVESCORE_API_SECRET: ${{ secrets.LIVESCORE_API_SECRET }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        SMTP_TO: ${{ secrets.SMTP_TO }}
      run: |
        echo "LIVESCORE_API_KEY=$LIVESCORE_API_KEY" > .env
        echo "LIVESCORE_API_SECRET=$LIVESCORE_API_SECRET" >> .env
        echo "FLASK_ENV=production" >> .env
        echo "FLASK_DEBUG=False" >> .env
        echo "SMTP_SERVER=$SMTP_SERVER" >> .env
        echo "SMTP_PORT=$SMTP_PORT" >> .env
        echo "SMTP_USERNAME=$SMTP_USERNAME" >> .env
        echo "SMTP_PASSWORD=$SMTP_PASSWORD" >> .env
        echo "SMTP_FROM=$SMTP_FROM" >> .env
        echo "SMTP_TO=$SMTP_TO" >> .env
    
    - name: Build artifact
      run: |
        mkdir -p dist
        cp app.py dist/
        cp -r static dist/
        cp -r templates dist/
        cp wsgi.py dist/
        cp requirements.txt dist/
        cp .env dist/
        cp -r tests dist/
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ligamx-app
        path: dist/
        retention-days: 5
        
    - name: Send notification
      if: ${{ env.SMTP_SERVER != '' }}
      env:
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        SMTP_FROM: ${{ secrets.SMTP_FROM }}
        SMTP_TO: ${{ secrets.SMTP_TO }}
      run: |
        python -c "import smtplib; from email.mime.text import MIMEText; s = smtplib.SMTP('$SMTP_SERVER', $SMTP_PORT); s.starttls(); s.login('$SMTP_USERNAME', '$SMTP_PASSWORD'); msg = MIMEText('LIGAMX Stats application has been built successfully.'); msg['Subject'] = 'Build Notification'; msg['From'] = '$SMTP_FROM'; msg['To'] = '$SMTP_TO'; s.send_message(msg); s.quit()"
